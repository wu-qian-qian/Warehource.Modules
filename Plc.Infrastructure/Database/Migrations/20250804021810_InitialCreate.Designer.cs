// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plc.Infrastructure.Database;

#nullable disable

namespace Plc.Infrastructure.Database.Migrations
{
    [DbContext(typeof(PlcDBContext))]
    [Migration("20250804021810_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Plc.Domain.S7.S7EntityItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("ArrtypeLength")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("BitOffset")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DBAddress")
                        .HasColumnType("int");

                    b.Property<int>("DataOffset")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifierUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("NetGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("S7BlockType")
                        .HasColumnType("int");

                    b.Property<int>("S7DataType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("NetGuid");

                    b.ToTable("Plc.S7EntityItem", (string)null);
                });

            modelBuilder.Entity("Plc.Domain.S7.S7NetConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifierUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<short>("Rack")
                        .HasColumnType("smallint");

                    b.Property<string>("ReadHeart")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ReadTimeOut")
                        .HasColumnType("int");

                    b.Property<int>("S7Type")
                        .HasColumnType("int");

                    b.Property<short>("Solt")
                        .HasColumnType("smallint");

                    b.Property<string>("WriteHeart")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("WriteTimeOut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Plc.S7NetConfig", (string)null);
                });

            modelBuilder.Entity("Plc.Domain.S7.S7EntityItem", b =>
                {
                    b.HasOne("Plc.Domain.S7.S7NetConfig", null)
                        .WithMany("S7EntityItems")
                        .HasForeignKey("NetGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plc.Domain.S7.S7NetConfig", b =>
                {
                    b.Navigation("S7EntityItems");
                });
#pragma warning restore 612, 618
        }
    }
}

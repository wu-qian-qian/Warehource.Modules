[
  {
    "ContainingType": "Identity.Presentation.PageQuery.RolePage\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "get/get-role-page",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Identity.Contrancts.Request.Page.GetRolePageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Shared.PageResult\u00601[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.PageQuery.UserPage\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "get/get-user-page",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Identity.Contrancts.Request.Page.GetUserPageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Shared.PageResult\u00601[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Get.GetUser\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "get/get-user/{username}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Identity.Contrancts.Respon.UserDto",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Get.GetUsers\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "get/get-users",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.AddS7NetConfig\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/add-allplc-config",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[System.Collections.Generic.IEnumerable\u00601[[Plc.Contracts.Respon.S7NetDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.Delete.DeletePlc\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/delete-plc/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.DownLoad\u002BDownLoadS7NetTemplate\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/downLoad-plc-template",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.Net.GetS7NetConfig\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/get-allplc",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[System.Collections.Generic.IEnumerable\u00601[[Plc.Contracts.Respon.S7NetDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.Entity.GetS7EntityItem\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/get-allplc-entityitem",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[System.Collections.Generic.IEnumerable\u00601[[Plc.Contracts.Respon.S7EntityItemDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.Page.GetEntityItemPage\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/get-entityitem-page",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Plc.Contracts.Request.GetEntityItemPageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Shared.PageResult\u00601[[Plc.Contracts.Respon.S7EntityItemDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.Page.GetS7NetPage\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/get-plcnet-page",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Plc.Contracts.Request.GetS7NetPageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Shared.PageResult\u00601[[Plc.Contracts.Respon.S7NetDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.GetEnum.GetS7BlockTypeEnum\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/get-s7blocktype-enum",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String[]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Enum"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.GetEnum.GetDataTypeEnum\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/get-s7datatype-Enum",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String[]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Enum"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.GetEnum.GetS7TypeEnum\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/get-s7Type-Enum",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String[]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Enum"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.ReloadCache.ReloadPlcCache\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/reload-plc-cache",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.Update.UpdateEntityItem\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/update-entityitem",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Plc.Contracts.Request.UpdateEntityItemRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Plc.Presentation.S7Plc.Update.UpdateS7Net\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "plc/update-s7net",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Plc.Contracts.Request.UpdateS7NetRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Plc"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.AddAdmin.AddAdminRole\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/add-adminrole",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.AddAdmin.AddAdminUser\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/add-adminuser",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Add.AddRole\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/add-role",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Identity.Contrancts.Request.Add.AddRoleRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Add.AddUser\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/add-user",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requst",
        "Type": "Identity.Contrancts.Request.Add.AddUserRequst",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Delete.DeleteRole\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/Delete-role/{roleName}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Delete.DeleteUser\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/Delete-user/id",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Get.GetRoles\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/get-roles",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Update.UpdateRole\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/update-role",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Identity.Contrancts.Request.Update.UpdateRoleRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Update.UpdateUser\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/update-user",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Identity.Contrancts.Request.Update.UpdateUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  },
  {
    "ContainingType": "Identity.Presentation.Login.Login\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoint\u003Eb__0_0",
    "RelativePath": "user/user-login",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requst",
        "Type": "Identity.Contrancts.Request.LoginRequst",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Application.MediatR.Behaviors.Result\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Identity"
    ]
  }
]
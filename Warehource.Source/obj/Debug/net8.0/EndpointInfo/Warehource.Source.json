{
  "openapi": "3.0.1",
  "info": {
    "title": "API",
    "description": "API built using the modular monolith architecture.",
    "version": "v1"
  },
  "paths": {
    "/decive/delete/{id}": {
      "delete": {
        "tags": [
          "Decive"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/decive/get": {
      "post": {
        "tags": [
          "Decive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Device.GetDviceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.Device.DeviceDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/decive/add-or-update": {
      "post": {
        "tags": [
          "Decive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Device.DeviceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Device.DeviceDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/getenum/get-creatorSystemType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getenum/get-devucetype": {
      "get": {
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getenum/get-jobtypes": {
      "get": {
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getenum/get-wcstaskstatus": {
      "get": {
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getenum/get-wcstasktype": {
      "get": {
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/executenode/delete/{id}": {
      "delete": {
        "tags": [
          "ExecuteNode"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/executenode/gets": {
      "post": {
        "tags": [
          "ExecuteNode"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.ExecuteNode.ExecuteNodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.ExecuteNode.ExecuteNodeDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/executenode/add-or-update": {
      "post": {
        "tags": [
          "ExecuteNode"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.ExecuteNode.ExecuteNodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.ExecuteNode.ExecuteNodeDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/user/update-role": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity.Contrancts.Request.Update.UpdateRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/user/update-user": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity.Contrancts.Request.Update.UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/get/get-role-page": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity.Contrancts.Request.Page.GetRolePageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Shared.PageResult`1[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/get/get-user-page": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity.Contrancts.Request.Page.GetUserPageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Shared.PageResult`1[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/user/user-login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity.Contrancts.Request.LoginRequst"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/user/get-roles": {
      "get": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Identity.Contrancts.Respon.RoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/get-user/{username}": {
      "get": {
        "tags": [
          "Identity"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity.Contrancts.Respon.UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/get/get-users": {
      "get": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Identity.Contrancts.Respon.UserDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/Delete-role/{roleName}": {
      "delete": {
        "tags": [
          "Identity"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/Delete-user/id": {
      "delete": {
        "tags": [
          "Identity"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/add-role": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity.Contrancts.Request.Add.AddRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/user/add-user": {
      "post": {
        "tags": [
          "Identity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity.Contrancts.Request.Add.AddUserRequst"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/user/add-adminrole": {
      "post": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/user/add-adminuser": {
      "post": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/job/job-status": {
      "post": {
        "tags": [
          "Job"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Job.UpdateJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/job/get-jobpage-query": {
      "post": {
        "tags": [
          "Job"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Job.GetPageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Shared.PageResult`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/job/get-jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/job/delete-job": {
      "post": {
        "tags": [
          "Job"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Job.DeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/job/add-job": {
      "post": {
        "tags": [
          "Job"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Job.AddJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/plc/add-allplc-config": {
      "post": {
        "tags": [
          "Plc"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Plc.Contracts.Respon.S7NetDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/plc/get-allplc": {
      "get": {
        "tags": [
          "Plc"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Plc.Contracts.Respon.S7NetDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/plc/get-allplc-entityitem": {
      "get": {
        "tags": [
          "Plc"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Plc.Contracts.Respon.S7EntityItemDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/plc/downLoad-plc-template": {
      "get": {
        "tags": [
          "Plc"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/region/add-region": {
      "post": {
        "tags": [
          "Region"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Region.RegionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Region.RegionDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/region/delete-region/{id}": {
      "delete": {
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Region.RegionDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/region/get-regionpage": {
      "post": {
        "tags": [
          "Region"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Region.GetRegionPageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Shared.PageResult`1[[Wcs.Contracts.Respon.Region.RegionDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/region/get-region": {
      "get": {
        "tags": [
          "Region"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wcs.Contracts.Respon.Region.RegionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/region/update-region": {
      "post": {
        "tags": [
          "Region"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.Region.RegionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Region.RegionDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/add-or-update-wcstask": {
      "post": {
        "tags": [
          "WcsTask"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.WcsTask.InsertWcsTaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/add-self-wcstask": {
      "post": {
        "tags": [
          "WcsTask"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.WcsTask.InsertWcsTaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/delete-wcstask/{serialNumber}": {
      "delete": {
        "tags": [
          "WcsTask"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/get-wcstask-pagequery": {
      "post": {
        "tags": [
          "WcsTask"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.WcsTask.GetWcsTaskPageQueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Shared.PageResult`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/get-wcstask/{serialNumber}": {
      "get": {
        "tags": [
          "WcsTask"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/get-TaskData/{time}": {
      "get": {
        "tags": [
          "WcsTask"
        ],
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wcs.Contracts.Respon.WcsTask.GetWcsDataDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/get-execute-wcstask": {
      "post": {
        "tags": [
          "WcsTask"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.WcsTask.GetWcsTaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          }
        }
      }
    },
    "/wcstask/update-wcstask-status": {
      "put": {
        "tags": [
          "WcsTask"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wcs.Contracts.Request.WcsTask.UpdateWcsTaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/Identity.Contrancts.Respon.RoleDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/Identity.Contrancts.Respon.UserDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Plc.Contracts.Respon.S7EntityItemDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plc.Contracts.Respon.S7EntityItemDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Plc.Contracts.Respon.S7NetDto, Plc.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plc.Contracts.Respon.S7NetDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.Device.DeviceDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wcs.Contracts.Respon.Device.DeviceDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.ExecuteNode.ExecuteNodeDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wcs.Contracts.Respon.ExecuteNode.ExecuteNodeDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wcs.Contracts.Respon.Job.JobDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[System.Collections.Generic.IEnumerable`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wcs.Contracts.Respon.WcsTask.WcsTaskDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Device.DeviceDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/Wcs.Contracts.Respon.Device.DeviceDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.ExecuteNode.ExecuteNodeDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/Wcs.Contracts.Respon.ExecuteNode.ExecuteNodeDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/Wcs.Contracts.Respon.Job.JobDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.Region.RegionDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/Wcs.Contracts.Respon.Region.RegionDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Application.MediatR.Behaviors.Result`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/Wcs.Contracts.Respon.WcsTask.WcsTaskDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Shared.PageResult`1[[Identity.Contrancts.Respon.RoleDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identity.Contrancts.Respon.RoleDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Common.Shared.PageResult`1[[Identity.Contrancts.Respon.UserDto, Identity.Contrancts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identity.Contrancts.Respon.UserDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Common.Shared.PageResult`1[[Wcs.Contracts.Respon.Job.JobDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wcs.Contracts.Respon.Job.JobDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Common.Shared.PageResult`1[[Wcs.Contracts.Respon.Region.RegionDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wcs.Contracts.Respon.Region.RegionDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Common.Shared.PageResult`1[[Wcs.Contracts.Respon.WcsTask.WcsTaskDto, Wcs.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wcs.Contracts.Respon.WcsTask.WcsTaskDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Request.Add.AddRoleRequest": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Request.Add.AddUserRequst": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Request.LoginRequst": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Request.Page.GetRolePageRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Request.Page.GetUserPageRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Request.Update.UpdateRoleRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Request.Update.UpdateUserRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "lockoutEnd": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Respon.RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Identity.Contrancts.Respon.UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Plc.Contracts.Respon.S7EntityItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "s7DataType": {
            "$ref": "#/components/schemas/Plc.Shared.S7DataTypeEnum"
          },
          "dataOffset": {
            "type": "integer",
            "format": "int32"
          },
          "bitOffset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "s7BlockType": {
            "$ref": "#/components/schemas/Plc.Shared.S7BlockTypeEnum"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "arrtypeLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Plc.Contracts.Respon.S7NetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "s7Type": {
            "$ref": "#/components/schemas/Plc.Shared.S7TypeEnum"
          },
          "solt": {
            "type": "integer",
            "format": "int32"
          },
          "rack": {
            "type": "integer",
            "format": "int32"
          },
          "readTimeOut": {
            "type": "integer",
            "format": "int32"
          },
          "writeTimeOut": {
            "type": "integer",
            "format": "int32"
          },
          "isUse": {
            "type": "boolean"
          },
          "readHeart": {
            "type": "string",
            "nullable": true
          },
          "writeHeart": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Plc.Shared.S7BlockTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "Plc.Shared.S7DataTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "Plc.Shared.S7TypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Wcs.Contracts.Request.Device.DeviceRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deviceType": {
            "$ref": "#/components/schemas/Wcs.Shared.DeviceTypeEnum"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "regionCodes": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "enable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.Device.GetDviceRequest": {
        "type": "object",
        "properties": {
          "deviceType": {
            "$ref": "#/components/schemas/Wcs.Shared.DeviceTypeEnum"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "enable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.ExecuteNode.ExecuteNodeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "pahtNodeGroup": {
            "type": "string",
            "nullable": true
          },
          "currentDeviceType": {
            "$ref": "#/components/schemas/Wcs.Shared.DeviceTypeEnum"
          },
          "taskType": {
            "$ref": "#/components/schemas/Wcs.Shared.WcsTaskTypeEnum"
          },
          "regionCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.Job.AddJobRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "jobtype": {
            "type": "string",
            "nullable": true
          },
          "timeOut": {
            "type": "integer",
            "format": "int32"
          },
          "timer": {
            "type": "integer",
            "format": "int32"
          },
          "isStart": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.Job.DeleteRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.Job.GetPageRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "jobType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.Job.UpdateJobRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isStart": {
            "type": "boolean",
            "nullable": true
          },
          "timer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timerOut": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.Region.GetRegionPageRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.Region.RegionRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "currentNum": {
            "type": "integer",
            "format": "int32"
          },
          "maxNum": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.WcsTask.GetWcsTaskPageQueryRequest": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taskCode": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getLocation": {
            "type": "string",
            "nullable": true
          },
          "putLocation": {
            "type": "string",
            "nullable": true
          },
          "taskStatus": {
            "$ref": "#/components/schemas/Wcs.Shared.WcsTaskStatusEnum"
          },
          "creatorSystemType": {
            "$ref": "#/components/schemas/Wcs.Shared.CreatorSystemTypeEnum"
          },
          "wcsTaskType": {
            "$ref": "#/components/schemas/Wcs.Shared.WcsTaskTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.WcsTask.GetWcsTaskRequest": {
        "type": "object",
        "properties": {
          "container": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taskCode": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getLocation": {
            "type": "string",
            "nullable": true
          },
          "putLocation": {
            "type": "string",
            "nullable": true
          },
          "taskType": {
            "$ref": "#/components/schemas/Wcs.Shared.WcsTaskTypeEnum"
          },
          "creatorSystemType": {
            "$ref": "#/components/schemas/Wcs.Shared.CreatorSystemTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.WcsTask.InsertWcsTaskRequest": {
        "type": "object",
        "properties": {
          "taskCode": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "isEnforce": {
            "type": "boolean"
          },
          "taskType": {
            "$ref": "#/components/schemas/Wcs.Shared.WcsTaskTypeEnum"
          },
          "creatorSystemType": {
            "$ref": "#/components/schemas/Wcs.Shared.CreatorSystemTypeEnum"
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "getTunnel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getFloor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getRow": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getColumn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getDepth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "putTunnel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "putFloor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "putRow": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "putColumn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "putDepth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockOutPosition": {
            "type": "string",
            "nullable": true
          },
          "stockInPosition": {
            "type": "string",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "nullable": true
          },
          "getLocation": {
            "type": "string",
            "nullable": true
          },
          "putlocation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Request.WcsTask.UpdateWcsTaskRequest": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEnforce": {
            "type": "boolean",
            "nullable": true
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "taskStatus": {
            "$ref": "#/components/schemas/Wcs.Shared.WcsTaskStatusEnum"
          },
          "getLocation": {
            "type": "string",
            "nullable": true
          },
          "putLocation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Respon.Device.DeviceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifierUser": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deviceType": {
            "$ref": "#/components/schemas/Wcs.Shared.DeviceTypeEnum"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "type": "string",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "nullable": true
          },
          "enable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Respon.ExecuteNode.ExecuteNodeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifierUser": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "pahtNodeGroup": {
            "type": "string",
            "nullable": true
          },
          "currentDeviceType": {
            "type": "string",
            "nullable": true
          },
          "taskType": {
            "type": "string",
            "nullable": true
          },
          "regionDescription": {
            "type": "string",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Respon.Job.JobDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifierUser": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "jobType": {
            "type": "string",
            "nullable": true
          },
          "timeOut": {
            "type": "integer",
            "format": "int32"
          },
          "timer": {
            "type": "integer",
            "format": "int32"
          },
          "isStart": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Respon.Region.RegionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifierUser": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "maxNum": {
            "type": "integer",
            "format": "int32"
          },
          "currentNum": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Respon.WcsTask.GetWcsDataDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "growth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Wcs.Contracts.Respon.WcsTask.WcsTaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifierUser": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "isEnforce": {
            "type": "boolean"
          },
          "taskCode": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32"
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "taskType": {
            "type": "string",
            "nullable": true
          },
          "taskStatus": {
            "type": "string",
            "nullable": true
          },
          "creatorSystemType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "getLocation": {
            "type": "string",
            "nullable": true
          },
          "putLocation": {
            "type": "string",
            "nullable": true
          },
          "executeDesc": {
            "type": "string",
            "nullable": true
          },
          "executePath": {
            "type": "string",
            "nullable": true
          },
          "stockInPosition": {
            "type": "string",
            "nullable": true
          },
          "stockOutPosition": {
            "type": "string",
            "nullable": true
          },
          "currentDevice": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Wcs.Shared.CreatorSystemTypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Wcs.Shared.DeviceTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Wcs.Shared.WcsTaskStatusEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "Wcs.Shared.WcsTaskTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "description": "Authorization header. \r\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Authorization": [ ]
    }
  ]
}
@page "/RegionConfig"
@using UI.Model.Region
@using UI.Service.RegionService
@inject IRegionService _RegionService
@inject IMessageService _message
<PageTitle>ExecuteNodePath</PageTitle>

<div>
    <Row Class="ant-table-tbody" Style="display: flex; justify-content: space-between; margin:5px">
        <AntDesign.Col Flex="1">
            <Button Type="ButtonType.Primary" Style="margin-top:20px" @onclick="_ => LoadTableData()">重新加载</Button>
        </AntDesign.Col>
        <AntDesign.Col Flex="1">
            <Button Type="ButtonType.Primary" Style="margin-top:20px" @onclick="_ => TaskDetailPanelOpen()">
                添加
            </Button>
        </AntDesign.Col>
        <AntDesign.Col Flex="8">
            <div Style="margin-top:20px">
                <Text>区域编码</Text>
                <Input Placeholder="请输入" TValue="string" width="160px"/>
            </div>
        </AntDesign.Col>

        <AntDesign.Col Flex="1">
            <Button Type="ButtonType.Primary" Style="margin-top:20px">查询</Button>
        </AntDesign.Col>
    </Row>
    <Row Style="display: flex;margin-top: 30px; flex-direction: column; height: calc(100vh - 150px);">
        <Table DataSource="data" PageSize="10" ScrollX="1200" StickyOffsetHeader="64" Class="my-table">
            <PropertyColumn Property="c => c.Code" Width="200" Title="编码"/>
            <PropertyColumn Property="c => c.Description" Width="160" Title="描述"/>
            <PropertyColumn Property="c => c.CreationTime" Width="160" Title="创建时间"/>
            <PropertyColumn Property="c => c.LastModifierUser" Width="160" Title="修改人"/>
            <PropertyColumn Property="c => c.LastModificationTime" Width="160" Title="修改人时间"/>
        </Table>
    </Row>
</div>
<div>
    <Drawer Closable="true" Width="420"
            Visible="DrawerVisible" Title='"任务面板"' OnClose="_ => TaskDetailPanelClose()">
        <Template style="height:90%">
            <Row Gutter="18">
                <AntDesign.Col Span="12">
                    <Text>区域编码：</Text>
                    <Input Placeholder="请输入" @bind-Value="@select.Code" TValue="string"/>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <Text>区域描述：</Text>
                    <Input Placeholder="请输入" @bind-Value="@select.Description" TValue="string"/>
                </AntDesign.Col>
            </Row>
            <Row>
                <AntDesign.Col Span="18">
                </AntDesign.Col>
                <AntDesign.Col Span="6">
                    <Button Type="ButtonType.Primary" @onclick="_ => Commit()">提交</Button>
                </AntDesign.Col>
            </Row>
        </Template>
    </Drawer>
</div>
<style>
    /* 在 wwwroot/css/site.css 或组件样式部分添加 */
    .my-table .ant-table-tbody > tr:nth-child(odd) > td {
        background-color: #f8f8f8; /* 浅色行 */
    }

    .my-table .ant-table-tbody > tr:nth-child(even) > td {
        background-color: #ffffff; /* 白色行（或更深颜色） */
    }

    /* 鼠标悬停效果 */
    .my-table .ant-table-tbody > tr:hover > td {
        background-color: #e6f7ff !important; /* 悬停高亮色 */
    }

</style>

@code {

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await LoadTableData();
        select = new RegionModel();
    }

    RegionModel select;
    RegionModel[] data;

    async Task LoadTableData()
    {
        data = (await _RegionService.GetRegionsAsync()).Value;
    }

    bool DrawerVisible;

    void TaskDetailPanelOpen()
    {
        DrawerVisible = true;
    }

    void TaskDetailPanelClose()
    {
        DrawerVisible = false;
    }

    async Task Commit()
    {
        var result = await _RegionService.CreateRegionAsync(select);
        if (result.IsSuccess)
        {
            _message.Success("Sucess");
        }
        else
        {
            _message.Error(result.Message);
        }
    }


}